use Northwind

--TABLA QUE SE LLENARA DENTRO DEL TRIGGER DDL SOBRE BASE DE DATOS
CREATE TABLE DBO.LOGCAMBIOSDDL(
CLAVE INT IDENTITY PRIMARY KEY,
NIVEL CHAR(1) NOT NULL,
FECHA DATETIME NOT NULL CONSTRAINT DF_LOGCAMBIOSDDL_FECHACAMBIOS DEFAULT (GETDATE()),
INICIOSESION VARCHAR (500) NOT NULL,
USUARIO VARCHAR (500) NOT NULL, 
ACCION VARCHAR (500) ,
OBJETO VARCHAR(500),
SENTENCIA VARCHAR(MAX),
DETALLEENVIO XML NOT NULL);
GO

--TRIGGER DDL SOBRE BASE DE DATOS NORTHWIND
--AUDITORIA SOBRE CREACION, MODIFICACION, ELIMINACION DE TABLAS/VISTAS
CREATE TRIGGER TRDB_AUDITACAMBIOS
ON DATABASE
FOR
CREATE_TABLE, ALTER_TABLE, DROP_TABLE,
CREATE_VIEW, ALTER_VIEW, DROP_VIEW
AS
BEGIN 
     SET NOCOUNT ON;
	 --DECLARACION DE VARIABLES DE PROCESO
	 DECLARE @INFOEVENT XML, @ACCION VARCHAR(500), @OBJETO VARCHAR (500), @SENTENCIA NVARCHAR (MAX);
	 --1. CAPTURA DE EVENTO EN VARIABLE PRINCIPAL
	 SET @INFOEVENT= EVENTDATA();

	 --2. CONSUMIR INFORMACION EN VARIABLES SECUNDARIAS USANDO XQUERY
	 --CAPTURA LA ACCION DDL (SI ES CREATE, ALTER, DROP)
	 SET @ACCION=@INFOEVENT.value('(/EVENT_INSTANCE/EVENTTYPE)[1]','VARCHAR(500)');
	 --CAPTURA EL NOMBBRE OBJECTO AFECTADO, ANTEPONIENDO EL NOMBRE DEL ESQUEMA
	 SET @OBJETO= @INFOEVENT.value('(/EVENT_INSTANCE/SCHEMANAME)[1]','VARCHAR(250)')
	 +','+@INFOEVENT.value('(EVENT_INSTANCE/OBJECTNAME)[1]','VARCHAR(250)');
	 --CAPTURA LA SENTECIA EJECUTADA
	 SET @SENTENCIA=@INFOEVENT.value('(/EVENT_INSTANCE/TSQLCOMMAND)[1]','NVARCHAR(MAX)');

	 --3 ALMACENAR DETALLES DE LA ACCION EN TABLA LOG
	 INSERT DBO.LOGCAMBIOSDDL(NIVEL,FECHA,INICIOSESION,USUARIO,ACCION,OBJETO,SENTENCIA,DETALLEENVIO)
	 VALUES('B'--INDICA QUE ES EN BASE DE DATOS
	 , GETDATE(),SUSER_NAME(),CURRENT_USER,@ACCION,@OBJETO,@SENTENCIA,@INFOEVENT);
END
GO 
--PRUEBA
select*from LOGCAMBIOSDDL

create table dbo.TablaTest1 (c1 int, c2 date);
